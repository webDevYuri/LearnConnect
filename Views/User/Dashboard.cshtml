@model IEnumerable<LearnConnect.Models.Post>
@{
    Layout = "User_Layout";
    ViewData["Title"] = "Dashboard";
}
@using LearnConnect.Data
@using LearnConnect.Helpers
@inject LcDbContext _context


@{
    var userEmail = Context.Session.GetString("UserEmail");
    var userProfile = userEmail != null ? _context.UserProfiles.FirstOrDefault(u => u.Email == userEmail) : null;
}

<div class="container">
    <div class="feed-container" style="max-width: 600px; width: 100%;">
        <div class="card rounded-4 shadow-sm mb-4 border-0">
            <div class="card-body p-3">
                <div class="d-flex align-items-center gap-2">
                    @if (userProfile?.ProfilePhotoPath != null)
                    {
                        <img src="@userProfile.ProfilePhotoPath" class="rounded-circle shadow-sm" style="width: 40px; height: 40px; object-fit: cover;" alt="Profile Photo" />
                    }
                    else
                    {
                        <i class="bi bi-person-circle fs-4"></i>
                    }
                    <div class="form-control bg-light shadow-sm rounded-pill text-muted border-0" data-bs-toggle="modal" data-bs-target="#postModal" style="cursor: pointer;">
                        What's on your mind, @userProfile?.FirstName?
                    </div>
                </div>
                <div class="d-flex justify-content-between mt-3 gap-3 pt-2 border-top">
                    <button class="btn btn-light rounded-pill shadow-sm border-0 d-flex align-items-center gap-2 flex-grow-1 justify-content-center">
                        <i class="bi bi-question-circle text-warning"></i>
                        <span class="d-none d-sm-inline">Ask Question</span>
                    </button>
                    <button class="btn btn-light rounded-pill shadow-sm border-0 d-flex align-items-center gap-2 flex-grow-1 justify-content-center" data-bs-toggle="modal" data-bs-target="#postModal">
                        <i class="bi bi-images text-success"></i>
                        <span class="d-none d-sm-inline">Photo</span>
                    </button>
                    <button class="btn btn-light rounded-pill shadow-sm border-0 d-flex align-items-center gap-2 flex-grow-1 justify-content-center">
                        <i class="bi bi-people text-danger"></i>
                        <span class="d-none d-sm-inline">Join Group</span>
                    </button>
                </div>
            </div>
        </div>

        @foreach (var post in Model)
        {
            <div id="post-@post.Id" class="card rounded-4 shadow-sm mb-4 border-0">
                <div class="card-body p-0">
                    <div class="p-3">
                        <div class="d-flex align-items-center">
                            @if (post.UserProfile.ProfilePhotoPath != null)
                            {
                                <img src="@post.UserProfile.ProfilePhotoPath" class="rounded-circle me-2" width="40" height="40" style="object-fit: cover;" />
                            }
                            else
                            {
                                <i class="bi bi-person-circle fs-4 me-2"></i>
                            }
                            <div>
                                <h6 class="mb-0 fw-bold">@post.UserProfile.FirstName @post.UserProfile.LastName</h6>
                                <p class="text-muted mb-0" style="font-size: 0.8rem;">@TimeHelper.TimeAgo(post.CreatedAt) · <i class="bi bi-globe2"></i></p>
                            </div>
                        </div>
                        <p class="mt-2 mb-0">@post.Content</p>
                    </div>
                    <div class="d-flex justify-content-center">
                        @if (!string.IsNullOrEmpty(post.MediaPath))
                        {
                            @if (post.MediaType == "image")
                            {
                                <img src="@post.MediaPath" class="img-fluid" alt="Post image" style="height: 300px;" />
                            }
                            else if (post.MediaType == "video")
                            {
                                <video src="@post.MediaPath" class="img-fluid" controls style="height: 300px;"></video>
                            }
                        }
                    </div>
                    <div class="px-3 py-2">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <span class="bg-primary rounded-circle text-white d-inline-flex align-items-center justify-content-center"
                                      style="width: 20px; height: 20px; font-size: 0.7rem;">
                                    <i class="bi bi-hand-thumbs-up-fill"></i>
                                </span>
                                <span class="text-muted ms-1" style="font-size: 0.9rem;">@post.Likes.Count</span>
                            </div>
                            <div class="text-muted" style="font-size: 0.9rem;">@post.Comments.Count comments</div>
                        </div>
                    </div>
                    <div class="d-flex justify-content-between px-3 gap-2 py-2 border-top border-bottom post-actions">
                        <button class="btn btn-light d-flex shadow-sm align-items-center justify-content-center gap-2 border-0" style="width: 150px;">
                            <i class="bi bi-hand-thumbs-up"></i>
                            <span class="d-none d-md-block">Like</span>
                        </button>
                        <button class="btn btn-light d-flex shadow-sm align-items-center justify-content-center gap-2 border-0" style="width: 150px;">
                            <i class="bi bi-chat"></i>
                            <span class="d-none d-md-block">Comment</span>
                        </button>
                        @if (post.UserProfileId == userProfile?.Id)
                        {
                            <form asp-action="DeletePost" asp-controller="User" method="post" onsubmit="return confirmDeletePost(event, '@post.Id')" class="post-actions">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="postId" value="@post.Id" />
                                <button type="submit" class="btn btn-light shadow-sm d-flex align-items-center justify-content-center gap-2 border-0" style="width: 150px;">
                                    <i class="bi bi-trash"></i>
                                    <span class="d-none d-md-block">Delete</span>
                                </button>
                            </form>
                        }
                        else
                        {
                            <button class="btn btn-light shadow-sm d-flex align-items-center justify-content-center gap-2 border-0" onclick="hidePost('@post.Id')" style="width: 150px;">
                                <i class="bi bi-x-circle"></i>
                                <span class="d-none d-md-block">Hide</span>
                            </button>
                        }
                    </div>
                    <div class="p-3">
                        <div class="d-flex gap-2">
                            @if (userProfile?.ProfilePhotoPath != null)
                            {
                                <img src="@userProfile.ProfilePhotoPath" class="rounded-circle shadow-sm" style="width: 32px; height: 32px; object-fit: cover;" alt="Profile Photo" />
                            }
                            else
                            {
                                <i class="bi bi-person-circle fs-4"></i>
                            }
                            <div class="position-relative flex-grow-1">
                                <form>
                                    <input type="text" class="form-control bg-light border-0 position-relative" placeholder="Write a comment..." />
                                    <button type="submit" class="btn position-absolute" style="right: 0; top: -3px;">
                                        <i class="bi bi-send fs-5"></i>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="modal fade" id="postModal" tabindex="-1" aria-labelledby="postModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow-sm rounded-4">
            <div class="modal-header border-1 border-bottom pb-3" style="border: 1px solid #f5f5f5;">
                <h5 class="modal-title fw-bold w-100 text-center fs-4" id="postModalLabel">Create post</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body px-4">
                <form asp-action="CreatePost" asp-controller="User" id="createPostForm" method="post" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    <div class="d-flex align-items-center mb-3">
                        <div class="avatar me-2">
                            @if (userProfile?.ProfilePhotoPath != null)
                            {
                                <img src="@userProfile.ProfilePhotoPath" class="rounded-circle shadow-sm" style="width: 40px; height: 40px; object-fit: cover;" alt="Profile Photo" />
                            }
                            else
                            {
                                <i class="bi bi-person-circle fs-4"></i>
                            }
                        </div>
                        <div class="fw-medium">@(userProfile?.FirstName + " " + userProfile?.LastName ?? "User")</div>
                    </div>
                    <div class="mb-3">
                        <textarea class="form-control border-0 p-0" name="content" id="caption" rows="3" placeholder="What's on your mind?" style="font-size: 16px; resize: none; box-shadow: none;"></textarea>
                    </div>
                    <div class="border rounded-3 bg-light shadow-sm p-4 text-center mb-3">
                        <div id="mediaPreviewContainer" class="mb-3 d-none">
                            <div class="position-relative d-inline-block">
                                <img id="photoPreview" class="img-fluid rounded-3 d-none" src="#" alt="Preview" style="height: 230px">
                                <video id="videoPreview" class="img-fluid rounded-3 d-none" controls style="height: 230px"></video>
                                <button type="button" id="removeMedia" class="btn btn-sm btn-light position-absolute top-0 end-0 m-2 rounded-circle">
                                    <i class="bi bi-x"></i>
                                </button>
                            </div>
                        </div>
                        <div id="uploadPrompt">
                            <i class="bi bi-images display-6 text-success mb-2"></i>
                            <h6 class="mb-1">Add photos/videos</h6>
                            <p class="text-muted small mb-0">or drag and drop</p>
                        </div>
                        <div class="d-flex align-items-center justify-content-center mt-3 pt-3 border-top">
                            <i class="bi bi-phone me-2 text-secondary"></i>
                            <span class="text-muted">Add photos and videos from your device</span>
                            <label for="mediaFile" class="btn shadow-sm ms-3 px-3" style="background: white;">Add</label>
                            <input type="file" name="mediaFile" id="mediaFile" class="d-none" accept="image/*,video/*">
                        </div>
                    </div>
                    <div class="modal-footer border-0 px-4 pb-4">
                        <button type="submit" class="btn btn-primary w-100 py-2 fw-medium">Post</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        @if (TempData["Success"] != null)
        {
            <text>
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: '@TempData["Success"]',
                    confirmButtonColor: '#3085d6'
                });
            </text>
        }

        @if (TempData["Error"] != null)
        {
            <text>
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: '@TempData["Error"]',
                    confirmButtonColor: '#3085d6'
                });
            </text>
        }
    </script>
    <script>
        function confirmDeletePost(event, postId) {
            event.preventDefault();
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    event.target.submit();
                }
            });
        }
        function hidePost(postId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "This post will be hidden from your feed.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    const postElement = document.getElementById(`post-${postId}`);
                    if (postElement) {
                        postElement.style.display = 'none';
                    }

                    Swal.fire({
                        icon: 'success',
                        title: 'Post hidden',
                        text: 'This post has been hidden from your feed.',
                        confirmButtonColor: '#3085d6'
                    });
                }
            });
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const mediaInput = document.getElementById('mediaFile');
            const photoPreview = document.getElementById('photoPreview');
            const videoPreview = document.getElementById('videoPreview');
            const mediaPreviewContainer = document.getElementById('mediaPreviewContainer');
            const uploadPrompt = document.getElementById('uploadPrompt');
            const removeMedia = document.getElementById('removeMedia');
            const caption = document.getElementById('caption');
            const form = document.getElementById('createPostForm');

            function checkPostContent() {
                const hasText = caption.value.trim().length > 0;
                const hasMedia = !mediaPreviewContainer.classList.contains('d-none');
                const submitButton = form.querySelector('button[type="submit"]');

                submitButton.disabled = !(hasText || hasMedia);
                submitButton.classList.toggle('opacity-50', !(hasText || hasMedia));
            }

            caption.addEventListener('input', checkPostContent);

            mediaInput.addEventListener('change', function() {
                if (this.files && this.files[0]) {
                    const file = this.files[0];
                    const isVideo = file.type.startsWith('video/');
                    const url = URL.createObjectURL(file);

                    if (isVideo) {
                        videoPreview.src = url;
                        videoPreview.classList.remove('d-none');
                        photoPreview.classList.add('d-none');
                    } else {
                        photoPreview.src = url;
                        photoPreview.classList.remove('d-none');
                        videoPreview.classList.add('d-none');
                    }

                    mediaPreviewContainer.classList.remove('d-none');
                    uploadPrompt.classList.add('d-none');
                }
                checkPostContent();
            });

            removeMedia.addEventListener('click', function() {
                mediaInput.value = '';
                photoPreview.classList.add('d-none');
                videoPreview.classList.add('d-none');
                mediaPreviewContainer.classList.add('d-none');
                uploadPrompt.classList.remove('d-none');
                checkPostContent();
            });

            const dropArea = document.querySelector('.modal-body');

            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, preventDefaults, false);
            });

            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }

            ['dragenter', 'dragover'].forEach(eventName => {
                dropArea.addEventListener(eventName, highlight, false);
            });

            ['dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, unhighlight, false);
            });

            function highlight() {
                dropArea.classList.add('bg-light');
            }

            function unhighlight() {
                dropArea.classList.remove('bg-light');
            }

            dropArea.addEventListener('drop', handleDrop, false);

            function handleDrop(e) {
                const dt = e.dataTransfer;
                const files = dt.files;

                if (files.length) {
                    mediaInput.files = files;
                    const event = new Event('change');
                    mediaInput.dispatchEvent(event);
                }
            }

            checkPostContent();

            form.addEventListener('submit', function(e) {
                const hasText = caption.value.trim().length > 0;
                const hasMedia = mediaInput.files && mediaInput.files.length > 0;

                if (!(hasText || hasMedia)) {
                    e.preventDefault();
                    Swal.fire({
                        icon: 'warning',
                        title: 'Empty Post',
                        text: 'Please add some text or media to your post',
                        confirmButtonColor: '#3085d6'
                    });
                }
            });
        });
    </script>
}